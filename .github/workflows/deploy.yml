name: Deploy PlutoPages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.9'
          
      - name: Cache Julia packages
        uses: julia-actions/cache@v1
        
      - name: Install dependencies
        run: |
          julia --project -e 'using Pkg; Pkg.instantiate()'
          
      - name: Generate site
        run: |
          julia --project -e '
          using PlutoPages
          println("Generating site...")
          input_dir = joinpath(pwd(), "src")
          output_dir = joinpath(pwd(), "generated_site")
          cache_dir = joinpath(pwd(), ".cache")
          
          output = PlutoPages.generate(
            input_dir=input_dir, 
            output_dir=output_dir, 
            cache_dir=cache_dir
          )
          println("Site generated in: ", output)
          
          # Copy CNAME file to generated site
          if isfile("CNAME")
              cp("CNAME", joinpath(output_dir, "CNAME"); force=true)
              println("CNAME file copied to generated site")
          end
          '
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'generated_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4